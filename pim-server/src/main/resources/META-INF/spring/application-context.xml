<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	<context:property-placeholder properties-ref="appProperties" />

	<context:annotation-config />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<task:annotation-driven/>

	<context:component-scan base-package="ru.mipt.pim" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/partials/**" location="/partials/" />

<!-- 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" > -->
<!--     	<property name="providerClass" value="org.apache.bval.jsr303.ApacheValidationProvider" />		 -->
<!-- 	</bean> -->

	<bean id="appProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean"
        p:location="classpath:/META-INF/spring/spring.properties" />

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
        <property name="cacheSeconds" value="5"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="maxUploadSize" value="50000000"/>
	</bean>

	<!-- you can't call it objectMapper for some reason -->
	<bean name="jacksonObjectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
	    <property name="featuresToEnable">
	        <array>
	            <util:constant static-field="com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_AS_TIMESTAMPS"/>
	        </array>
	    </property>
	</bean>

	<!-- setup spring MVC -->
	<mvc:annotation-driven>
	    <mvc:message-converters register-defaults="true">
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	            <property name="objectMapper" ref="jacksonObjectMapper"/>
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>

<!-- 	<mvc:annotation-driven> -->
<!--         <mvc:message-converters> -->
<!--             <bean class="org.springframework.http.converter.StringHttpMessageConverter" /> -->
<!--             <bean class="org.springframework.http.converter.ResourceHttpMessageConverter" /> -->
<!--             <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> -->
<!--                 <property name="objectMapper" ref="jacksonObjectMapper" /> -->
<!--             </bean> -->
<!--         </mvc:message-converters> -->
<!--     </mvc:annotation-driven> -->

<!--     <bean id="jacksonObjectMapper" class="ru.mipt.pim.server.web.JsonMapper" />	 -->

	 <!-- Imports spring data-->
<!-- 	<import resource="spring-data.xml"/> -->

	<!-- Imports sesame configuration -->
	<import resource="sesame-context.xml"/>
	<import resource="spring-security.xml"/>


</beans>
